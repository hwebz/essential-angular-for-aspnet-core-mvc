{"version":3,"sources":["C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/BehaviorSubject.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/InnerSubscriber.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Notification.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Observable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Observer.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/OuterSubscriber.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subject.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/SubjectSubscription.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subscriber.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subscription.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/observable/of.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/catch.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/filter.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/map.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ArrayObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ConnectableObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/EmptyObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ForkJoinObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/FromObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/IteratorObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/PromiseObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ScalarObservable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/forkJoin.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/from.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/fromPromise.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/merge.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/of.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/catch.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/concatAll.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/concatMap.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/every.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/filter.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/first.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/last.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/map.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/merge.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/mergeAll.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/mergeMap.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/reduce.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/share.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/catchError.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/concatAll.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/concatMap.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/defaultIfEmpty.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/every.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/filter.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/first.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/last.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/map.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/merge.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/mergeAll.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/mergeMap.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/multicast.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/observeOn.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/reduce.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/refCount.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/scan.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/share.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/takeLast.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/iterator.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/observable.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/rxSubscriber.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/EmptyError.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/UnsubscriptionError.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/errorObject.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/identity.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isArray.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isArrayLike.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isFunction.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isObject.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isPromise.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isScheduler.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/noop.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/pipe.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/root.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/subscribeToResult.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/toSubscriber.js","C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/tryCatch.js","./ClientApp/$_lazy_route_resource lazy","./ClientApp/app/admin/admin.component.html","./ClientApp/app/admin/admin.component.ts","./ClientApp/app/admin/admin.module.ts","./ClientApp/app/admin/orderAdmin.component.html","./ClientApp/app/admin/orderAdmin.component.ts","./ClientApp/app/admin/overview.component.html","./ClientApp/app/admin/overview.component.ts","./ClientApp/app/admin/productAdmin.component.html","./ClientApp/app/admin/productAdmin.component.ts","./ClientApp/app/admin/productEditor.component.html","./ClientApp/app/admin/productEditor.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/app.routing.ts","./ClientApp/app/auth/auth.module.ts","./ClientApp/app/auth/authentication.component.html","./ClientApp/app/auth/authentication.component.ts","./ClientApp/app/auth/authentication.guard.ts","./ClientApp/app/auth/authentication.service.ts","./ClientApp/app/errorHandler.service.ts","./ClientApp/app/models/cart.model.ts","./ClientApp/app/models/configClasses.repository.ts","./ClientApp/app/models/model.module.ts","./ClientApp/app/models/order.model.ts","./ClientApp/app/models/product.model.ts","./ClientApp/app/models/repository.ts","./ClientApp/app/store/cartDetail.component.html","./ClientApp/app/store/cartDetail.component.ts","./ClientApp/app/store/cartSummary.component.html","./ClientApp/app/store/cartSummary.component.ts","./ClientApp/app/store/categoryFilter.component.html","./ClientApp/app/store/categoryFilter.component.ts","./ClientApp/app/store/checkout/checkoutDetails.component.html","./ClientApp/app/store/checkout/checkoutDetails.component.ts","./ClientApp/app/store/checkout/checkoutPayment.component.html","./ClientApp/app/store/checkout/checkoutPayment.component.ts","./ClientApp/app/store/checkout/checkoutSummary.component.html","./ClientApp/app/store/checkout/checkoutSummary.component.ts","./ClientApp/app/store/checkout/orderConfirmation.component.html","./ClientApp/app/store/checkout/orderConfirmation.component.ts","./ClientApp/app/store/pagination.component.html","./ClientApp/app/store/pagination.component.ts","./ClientApp/app/store/productList.component.html","./ClientApp/app/store/productList.component.ts","./ClientApp/app/store/productSelection.component.html","./ClientApp/app/store/productSelection.component.ts","./ClientApp/app/store/ratings.component.html","./ClientApp/app/store/ratings.component.ts","./ClientApp/app/store/store.module.ts","./ClientApp/boot.ts"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACjDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACpCA;AAAA;AACqB;AACrB;AACA,mDAAmD,iBAAiB;AACpE;AACA,SAAS,kBAAkB,GAAG,oBAAoB,GAAG,gBAAgB;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,eAAe,yBAAyB;AACxC,eAAe,yBAAyB;AACxC,eAAe,iBAAiB;AAChC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,eAAe,yBAAyB;AACxC,eAAe,iBAAiB;AAChC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7HA;AAAA;AACe;AACQ;AACmB;AAClB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA,uFAAuF,gBAAgB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,kBAAkB;AAClB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,eAAe,SAAS;AACxB;AACA,eAAe,SAAS;AACxB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,mBAAmB;AAClC,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE,kBAAkB,oBAAoB,EAAE,eAAe,uBAAuB,EAAE;AAC9I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC/SA;AAAA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B,2BAA2B,WAAW,EAAE;AACxC,2BAA2B;AAC3B;AACA;;;;;;;;;;ACPA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC9BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACA;AACE;AACW;AACJ;AACe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACtKA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACuB;AACvB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACxCA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACE;AACU;AACY;AAC7C;AACA,mBAAmB,eAAe;AAClC,IAAI,mBAAmB,mBAAmB,eAAe;AACzD,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,eAAe,wBAAwB;AACvC;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAA4D,aAAa;AACzE;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,eAAe,wBAAwB;AACvC;AACA,eAAe,iBAAiB;AAChC;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,yCAAyC,YAAY;AACrD;AACA,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACxQA;AAAA;AACkB;AACC;AACE;AACF;AACG;AACQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,+CAA+C,gJAA6E,EAAE;AAC9H;AACA;;;;;;;;;;AC/LA;AAAA;AACqB;AACI;AACzB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACJ;AACjB;AACA;AACA;;;;;;;;;;ACLA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;;;ACJA;AAAA;AACqB;AACP;AACd;AACA;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACM;AACD;AAC1B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACtEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACM;AACD;AACJ;AACtB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,KAAK;AACpB,eAAe,UAAU,gBAAgB,iBAAiB;AAC1D;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AC1HA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC4B;AACP;AACA;AACE;AACmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,2BAA2B;AAC3C,eAAe,8BAA8B;AAC7C,kBAAkB,8BAA8B;AAChD,iBAAiB,qCAAqC;AACtD,kBAAkB,sDAAsD;AACxE,iBAAiB,qCAAqC;AACtD,cAAc,kCAAkC;AAChD,eAAe;AACfmBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,UAAU,gBAAgB,iBAAiB;AAC1D;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yBAAyB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACjFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACK;AACR;AACU;AACF;AAC1B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,yBAAyB;AACxC;AACA,eAAe,SAAS;AACxB;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;AC1MA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACkB;AACI;AACF;AACQ;AACC;AACH;AACI;AACQ;AACjB;AACS;AACY;AAC1C;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC1HA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACe;AACM;AACiB;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAA6D,eAAe;AAC5E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA4D,aAAa;AACzE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3KA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACe;AACM;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,eAAe;AAC9B,eAAe,UAAU;AACzB;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qGAAiD,WAAW,EAAE;AAC9D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gEAAgE,4CAA4C;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,uCAAuC;AACnH;AACA,iBAAiB;AACjB;AACA,6EAA6E,mCAAmC;AAChH;AACA,iBAAiB;AACjB;AACA;AACA,qGAAiD,WAAW,EAAE;AAC9D,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC1DA;AAAA;AAC6B;AAC7B;AACA;;;;;;;;;;ACHA;AAAA;AACyB;AACzB;AACA;;;;;;;;;;ACHA;AAAA;AAC4B;AAC5B;AACA;;;;;;;;;;ACHA;AAAA;AACsB;AACtB;AACA;;;;;;;;;;ACHA;AAAA;AAC0B;AAC1B;AACA;;;;;;;;;;ACHA;AAAA;AACoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChEA;AAAA;AACmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtDA;AAAA;AAC4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjEA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,WAAW,SAAS;AACpB,WAAW,IAAI;AACf,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AAAA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtDA;AAAA;AAC8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvBA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtCA;AAAA;AAC+B;AACT;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;ACzDA;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpDA;AAAA;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnEA;AAAA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW,uBAAuB,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,6CAA6C;AACxD;AACA,WAAW,EAAE;AACb,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1DA;AAAA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACpHA;AAAA;AACmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrDA;AAAA;AACmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAA8D;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC/EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,WAAW,SAAS;AACpB,WAAW,IAAI;AACf,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA,8BAA8B,mEAAmE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;AC1EA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;AC9FA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACA;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA,WAAW,kEAAkE;AAC7E;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA,8BAA8B,wFAAwF;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACxJA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACA;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA,WAAW,SAAS;AACpB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uFAAuF;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACvHA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA,WAAW,IAAI;AACf;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACxFA;AAAA;AACqB;AACK;AACP;AACG;AACtB;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,8BAA8B,kFAAkF;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChGA;AAAA;AACmB;AACA;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AAC4B;AACF;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA,WAAW,oFAAoF;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;ACjLA;AAAA;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACxDA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,IAAI;AACJ;AACA,SAAS;AACT;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACtHA;AAAA;AACe;AACI;AACM;AACV;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW,uBAAuB,WAAW;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,6CAA6C;AACxD;AACA,WAAW,EAAE;AACb,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;ACnEA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACrFA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,6CAA6C;AACxD;AACA,WAAW,IAAI;AACf,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC3HA;AAAA;AACoB;AACD;AACD;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA,8BAA8B,kLAA2D;AACzF;AACA;AACA;;;;;;;;;;;;ACvBA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACqB;AACa;AACR;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA,WAAW,OAAO;AAClB;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC7GA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxBA;AAAA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;AC3BA;AAAA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G,0CAA0C,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;ACzBA;AAAA;AACA;AACA,mBAA0B,MAAM;AAChC;;;;;;;;;ACHA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AAAA;AACA,8CAAqD,0CAA0C,EAAE;AACjG;;;;;;;;;ACFA;AAAA;AACA,iCAAwC,0CAA0C,EAAE;AACpF;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AAAA;AACA;AACA,iBAAwB;AACxB;;;;;;;;;;;ACHA;AAAA;AACe;AACf;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB,EAAE;AAClE;AACA;AACA;;;;;;;;;8CCtBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;AClBA;AAAA;AACe;AACO;AACF;AACD;AACE;AACiB;AACZ;AACgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gCAAgC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,+BAA+B,EAAE;AAC5D;AACA;AACA,wFAAyC,WAAW,EAAE;AACtD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"main.bundle.js","sourcesContent":["/** PURE_IMPORTS_START ._Subject,._util_ObjectUnsubscribedError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n/**\n * @class BehaviorSubject<T>\n */\nexport var BehaviorSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\n//# sourceMappingURL=BehaviorSubject.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/BehaviorSubject.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/BehaviorSubject.js\n// module chunks = main","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var InnerSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\n//# sourceMappingURL=InnerSubscriber.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/InnerSubscriber.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/InnerSubscriber.js\n// module chunks = main","/** PURE_IMPORTS_START ._Observable PURE_IMPORTS_END */\nimport { Observable } from './Observable';\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport var Notification = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return Observable.of(this.value);\n            case 'E':\n                return Observable.throw(this.error);\n            case 'C':\n                return Observable.empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     */\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     */\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     */\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\n//# sourceMappingURL=Notification.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Notification.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/Notification.js\n// module chunks = main","/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport var Observable = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\n//# sourceMappingURL=Observable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Observable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/Observable.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Observer.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/Observer.js\n// module chunks = main","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var OuterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=OuterSubscriber.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/OuterSubscriber.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/OuterSubscriber.js\n// module chunks = main","/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nexport var SubjectSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\n/**\n * @class Subject<T>\n */\nexport var Subject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\n/**\n * @class AnonymousSubject<T>\n */\nexport var AnonymousSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\n//# sourceMappingURL=Subject.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subject.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subject.js\n// module chunks = main","/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var SubjectSubscription = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\n//# sourceMappingURL=SubjectSubscription.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/SubjectSubscription.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/SubjectSubscription.js\n// module chunks = main","/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isFunction } from './util/isFunction';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport var Subscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subscriber.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subscriber.js\n// module chunks = main","/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport var Subscription = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subscription.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/Subscription.js\n// module chunks = main","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_of PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { of as staticOf } from '../../observable/of';\nObservable.of = staticOf;\n//# sourceMappingURL=of.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/observable/of.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/observable/of.js\n// module chunks = main","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_catch PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { _catch } from '../../operator/catch';\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n//# sourceMappingURL=catch.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/catch.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/catch.js\n// module chunks = main","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_filter PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { filter } from '../../operator/filter';\nObservable.prototype.filter = filter;\n//# sourceMappingURL=filter.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/filter.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/filter.js\n// module chunks = main","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_map PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/map.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/add/operator/map.js\n// module chunks = main","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayLikeObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayLikeObservable, _super);\n    function ArrayLikeObservable(arrayLike, scheduler) {\n        _super.call(this);\n        this.arrayLike = arrayLike;\n        this.scheduler = scheduler;\n        if (!scheduler && arrayLike.length === 1) {\n            this._isScalar = true;\n            this.value = arrayLike[0];\n        }\n    }\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\n        var length = arrayLike.length;\n        if (length === 0) {\n            return new EmptyObservable();\n        }\n        else if (length === 1) {\n            return new ScalarObservable(arrayLike[0], scheduler);\n        }\n        else {\n            return new ArrayLikeObservable(arrayLike, scheduler);\n        }\n    };\n    ArrayLikeObservable.dispatch = function (state) {\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\n        if (subscriber.closed) {\n            return;\n        }\n        if (index >= length) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(arrayLike[index]);\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\n        var length = arrayLike.length;\n        if (scheduler) {\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < length && !subscriber.closed; i++) {\n                subscriber.next(arrayLike[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayLikeObservable;\n}(Observable));\n//# sourceMappingURL=ArrayLikeObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ArrayLikeObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable));\n//# sourceMappingURL=ArrayObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ArrayObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ArrayObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nexport var ConnectableObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ConnectableObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ConnectableObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var EmptyObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable));\n//# sourceMappingURL=EmptyObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/EmptyObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/EmptyObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._Observable,._EmptyObservable,.._util_isArray,.._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isArray } from '../util/isArray';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ForkJoinObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Joins last values emitted by passed Observables.\n     *\n     * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n     *\n     * <img src=\"./img/forkJoin.png\" width=\"100%\">\n     *\n     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n     * or directly as arguments. If no input Observables are provided, resulting stream will complete\n     * immediately.\n     *\n     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n     * array will have `n` values, where first value is the last thing emitted by the first Observable,\n     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n     * not emit more than once and it will complete after that. If you need to emit combined values not only\n     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n     * or {@link zip} instead.\n     *\n     * In order for resulting array to have the same length as the number of input Observables, whenever any of\n     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n     * and it will not emit anything either, even if it already has some last values from other Observables.\n     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n     * unless at any point some other Observable completes without emitting value, which brings us back to\n     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n     * have to emit something at least once and complete.\n     *\n     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n     * will be immediately unsubscribed.\n     *\n     * Optionally `forkJoin` accepts project function, that will be called with values which normally\n     * would land in emitted array. Whatever is returned by project function, will appear in output\n     * Observable instead. This means that default project can be thought of as a function that takes\n     * all its arguments and puts them into an array. Note that project function will be called only\n     * when output Observable is supposed to emit a result.\n     *\n     * @example <caption>Use forkJoin with operator emitting immediately</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.of(1, 2, 3, 4),\n     *   Rx.Observable.of(5, 6, 7, 8)\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [4, 8]\n     * // \"This is how it ends!\"\n     *\n     *\n     * @example <caption>Use forkJoin with operator emitting after some time</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [2, 3] after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     *\n     * @example <caption>Use forkJoin with project function</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n     *   (n, m) => n + m\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // 5 after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     * @see {@link combineLatest}\n     * @see {@link zip}\n     *\n     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n     * passed directly to the operator.\n     * @param {function} [project] Function that takes values emitted by input Observables and returns value\n     * that will appear in resulting Observable instead of default array.\n     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n     * or value from project function.\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ForkJoinObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ForkJoinObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_isArray,.._util_isArrayLike,.._util_isPromise,._PromiseObservable,._IteratorObservable,._ArrayObservable,._ArrayLikeObservable,.._symbol_iterator,.._Observable,.._operators_observeOn,.._symbol_observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from './IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable } from '../Observable';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[Symbol_observable] === 'function') {\n                if (ish instanceof Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray(ish)) {\n                return new ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise(ish)) {\n                return new PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike(ish)) {\n                return new ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[Symbol_observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable));\n//# sourceMappingURL=FromObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/FromObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/FromObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_root,.._Observable,.._symbol_iterator PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IteratorObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IteratorObservable, _super);\n    function IteratorObservable(iterator, scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n        if (iterator == null) {\n            throw new Error('iterator cannot be null.');\n        }\n        this.iterator = getIterator(iterator);\n    }\n    IteratorObservable.create = function (iterator, scheduler) {\n        return new IteratorObservable(iterator, scheduler);\n    };\n    IteratorObservable.dispatch = function (state) {\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\n        if (hasError) {\n            subscriber.error(state.error);\n            return;\n        }\n        var result = iterator.next();\n        if (result.done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(result.value);\n        state.index = index + 1;\n        if (subscriber.closed) {\n            if (typeof iterator.return === 'function') {\n                iterator.return();\n            }\n            return;\n        }\n        this.schedule(state);\n    };\n    IteratorObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\n                index: index, iterator: iterator, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                var result = iterator.next();\n                if (result.done) {\n                    subscriber.complete();\n                    break;\n                }\n                else {\n                    subscriber.next(result.value);\n                }\n                if (subscriber.closed) {\n                    if (typeof iterator.return === 'function') {\n                        iterator.return();\n                    }\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return IteratorObservable;\n}(Observable));\nvar StringIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function StringIterator(str, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = str.length;\n        }\n        this.str = str;\n        this.idx = idx;\n        this.len = len;\n    }\n    StringIterator.prototype[Symbol_iterator] = function () { return (this); };\n    StringIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.str.charAt(this.idx++)\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return StringIterator;\n}());\nvar ArrayIterator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ArrayIterator(arr, idx, len) {\n        if (idx === void 0) {\n            idx = 0;\n        }\n        if (len === void 0) {\n            len = toLength(arr);\n        }\n        this.arr = arr;\n        this.idx = idx;\n        this.len = len;\n    }\n    ArrayIterator.prototype[Symbol_iterator] = function () { return this; };\n    ArrayIterator.prototype.next = function () {\n        return this.idx < this.len ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : {\n            done: true,\n            value: undefined\n        };\n    };\n    return ArrayIterator;\n}());\nfunction getIterator(obj) {\n    var i = obj[Symbol_iterator];\n    if (!i && typeof obj === 'string') {\n        return new StringIterator(obj);\n    }\n    if (!i && obj.length !== undefined) {\n        return new ArrayIterator(obj);\n    }\n    if (!i) {\n        throw new TypeError('object is not iterable');\n    }\n    return obj[Symbol_iterator]();\n}\nvar maxSafeInteger = /*@__PURE__*/ Math.pow(2, 53) - 1;\nfunction toLength(o) {\n    var len = +o.length;\n    if (isNaN(len)) {\n        return 0;\n    }\n    if (len === 0 || !numberIsFinite(len)) {\n        return len;\n    }\n    len = sign(len) * Math.floor(Math.abs(len));\n    if (len <= 0) {\n        return 0;\n    }\n    if (len > maxSafeInteger) {\n        return maxSafeInteger;\n    }\n    return len;\n}\nfunction numberIsFinite(value) {\n    return typeof value === 'number' && root.isFinite(value);\n}\nfunction sign(value) {\n    var valueAsNumber = +value;\n    if (valueAsNumber === 0) {\n        return valueAsNumber;\n    }\n    if (isNaN(valueAsNumber)) {\n        return valueAsNumber;\n    }\n    return valueAsNumber < 0 ? -1 : 1;\n}\n//# sourceMappingURL=IteratorObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/IteratorObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/IteratorObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_root,.._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { root } from '../util/root';\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var PromiseObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(PromiseObservable, _super);\n    function PromiseObservable(promise, scheduler) {\n        _super.call(this);\n        this.promise = promise;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Converts a Promise to an Observable.\n     *\n     * <span class=\"informal\">Returns an Observable that just emits the Promise's\n     * resolved value, then completes.</span>\n     *\n     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n     * Observable. If the Promise resolves with a value, the output Observable\n     * emits that resolved value as a `next`, and then completes. If the Promise\n     * is rejected, then the output Observable emits the corresponding Error.\n     *\n     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link bindCallback}\n     * @see {@link from}\n     *\n     * @param {PromiseLike<T>} promise The promise to be converted.\n     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n     * the delivery of the resolved value (or the rejection).\n     * @return {Observable<T>} An Observable which wraps the Promise.\n     * @static true\n     * @name fromPromise\n     * @owner Observable\n     */\n    PromiseObservable.create = function (promise, scheduler) {\n        return new PromiseObservable(promise, scheduler);\n    };\n    PromiseObservable.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var promise = this.promise;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    subscriber.next(this.value);\n                    subscriber.complete();\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.next(value);\n                        subscriber.complete();\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.error(err);\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n        else {\n            if (this._isScalar) {\n                if (!subscriber.closed) {\n                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });\n                }\n            }\n            else {\n                promise.then(function (value) {\n                    _this.value = value;\n                    _this._isScalar = true;\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));\n                    }\n                }, function (err) {\n                    if (!subscriber.closed) {\n                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));\n                    }\n                })\n                    .then(null, function (err) {\n                    // escape the promise trap, throw unhandled errors\n                    root.setTimeout(function () { throw err; });\n                });\n            }\n        }\n    };\n    return PromiseObservable;\n}(Observable));\nfunction dispatchNext(arg) {\n    var value = arg.value, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n    }\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subscriber = arg.subscriber;\n    if (!subscriber.closed) {\n        subscriber.error(err);\n    }\n}\n//# sourceMappingURL=PromiseObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/PromiseObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/PromiseObservable.js\n// module chunks = main","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ScalarObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable));\n//# sourceMappingURL=ScalarObservable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ScalarObservable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/ScalarObservable.js\n// module chunks = main","/** PURE_IMPORTS_START ._ForkJoinObservable PURE_IMPORTS_END */\nimport { ForkJoinObservable } from './ForkJoinObservable';\nexport var forkJoin = ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/forkJoin.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/forkJoin.js\n// module chunks = main","/** PURE_IMPORTS_START ._FromObservable PURE_IMPORTS_END */\nimport { FromObservable } from './FromObservable';\nexport var from = FromObservable.create;\n//# sourceMappingURL=from.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/from.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/from.js\n// module chunks = main","/** PURE_IMPORTS_START ._PromiseObservable PURE_IMPORTS_END */\nimport { PromiseObservable } from './PromiseObservable';\nexport var fromPromise = PromiseObservable.create;\n//# sourceMappingURL=fromPromise.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/fromPromise.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/fromPromise.js\n// module chunks = main","/** PURE_IMPORTS_START .._operator_merge PURE_IMPORTS_END */\nimport { mergeStatic } from '../operator/merge';\nexport var merge = mergeStatic;\n//# sourceMappingURL=merge.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/merge.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/merge.js\n// module chunks = main","/** PURE_IMPORTS_START ._ArrayObservable PURE_IMPORTS_END */\nimport { ArrayObservable } from './ArrayObservable';\nexport var of = ArrayObservable.of;\n//# sourceMappingURL=of.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/of.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/observable/of.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_catchError PURE_IMPORTS_END */\nimport { catchError as higherOrder } from '../operators/catchError';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nexport function _catch(selector) {\n    return higherOrder(selector)(this);\n}\n//# sourceMappingURL=catch.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/catch.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/catch.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_concatAll PURE_IMPORTS_END */\nimport { concatAll as higherOrder } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return higherOrder()(this);\n}\n//# sourceMappingURL=concatAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/concatAll.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/concatAll.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_concatMap PURE_IMPORTS_END */\nimport { concatMap as higherOrderConcatMap } from '../operators/concatMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return higherOrderConcatMap(project, resultSelector)(this);\n}\n//# sourceMappingURL=concatMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/concatMap.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/concatMap.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_every PURE_IMPORTS_END */\nimport { every as higherOrder } from '../operators/every';\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every(predicate, thisArg) {\n    return higherOrder(predicate, thisArg)(this);\n}\n//# sourceMappingURL=every.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/every.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/every.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_filter PURE_IMPORTS_END */\nimport { filter as higherOrderFilter } from '../operators/filter';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return higherOrderFilter(predicate, thisArg)(this);\n}\n//# sourceMappingURL=filter.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/filter.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/filter.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_first PURE_IMPORTS_END */\nimport { first as higherOrder } from '../operators/first';\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first(predicate, resultSelector, defaultValue) {\n    return higherOrder(predicate, resultSelector, defaultValue)(this);\n}\n//# sourceMappingURL=first.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/first.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/first.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_last PURE_IMPORTS_END */\nimport { last as higherOrder } from '../operators/last';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last(predicate, resultSelector, defaultValue) {\n    return higherOrder(predicate, resultSelector, defaultValue)(this);\n}\n//# sourceMappingURL=last.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/last.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/last.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_map PURE_IMPORTS_END */\nimport { map as higherOrderMap } from '../operators/map';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return higherOrderMap(project, thisArg)(this);\n}\n//# sourceMappingURL=map.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/map.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/map.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_merge PURE_IMPORTS_END */\nimport { merge as higherOrder } from '../operators/merge';\nexport { mergeStatic } from '../operators/merge';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, observables)(this);\n}\n//# sourceMappingURL=merge.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/merge.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/merge.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_mergeAll PURE_IMPORTS_END */\nimport { mergeAll as higherOrder } from '../operators/mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return higherOrder(concurrent)(this);\n}\n//# sourceMappingURL=mergeAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/mergeAll.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/mergeAll.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_mergeMap PURE_IMPORTS_END */\nimport { mergeMap as higherOrderMergeMap } from '../operators/mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return higherOrderMergeMap(project, resultSelector, concurrent)(this);\n}\n//# sourceMappingURL=mergeMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/mergeMap.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/mergeMap.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_reduce PURE_IMPORTS_END */\nimport { reduce as higherOrderReduce } from '../operators/reduce';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return higherOrderReduce(accumulator, seed)(this);\n    }\n    return higherOrderReduce(accumulator)(this);\n}\n//# sourceMappingURL=reduce.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/reduce.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/reduce.js\n// module chunks = main","/** PURE_IMPORTS_START .._operators_share PURE_IMPORTS_END */\nimport { share as higherOrder } from '../operators/share';\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return higherOrder()(this);\n}\n;\n//# sourceMappingURL=share.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/share.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operator/share.js\n// module chunks = main","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/catchError.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/catchError.js\n// module chunks = main","/** PURE_IMPORTS_START ._mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/concatAll.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/concatAll.js\n// module chunks = main","/** PURE_IMPORTS_START ._mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/concatMap.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/concatMap.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/defaultIfEmpty.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/defaultIfEmpty.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar EverySubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/every.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/every.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/filter.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/filter.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber,.._util_EmptyError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\n}\nvar FirstOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n        this._emitted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        if (!this._emitted) {\n            this._emitted = true;\n            destination.next(value);\n            destination.complete();\n            this.hasCompleted = true;\n        }\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber));\n//# sourceMappingURL=first.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/first.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/first.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber,.._util_EmptyError PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last(predicate, resultSelector, defaultValue) {\n    return function (source) { return source.lift(new LastOperator(predicate, resultSelector, defaultValue, source)); };\n}\nvar LastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=last.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/last.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/last.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport var MapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/map.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/map.js\n// module chunks = main","/** PURE_IMPORTS_START .._Observable,.._observable_ArrayObservable,._mergeAll,.._util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { mergeAll } from './mergeAll';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\n}\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(new ArrayObservable(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/merge.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/merge.js\n// module chunks = main","/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, null, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/mergeAll.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/mergeAll.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexport var MergeMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var MergeMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=mergeMap.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/mergeMap.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/mergeMap.js\n// module chunks = main","/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport var MulticastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\n//# sourceMappingURL=multicast.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/multicast.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/multicast.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber,.._Notification PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport var ObserveOnOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var ObserveOnSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        _super.call(this, destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport var ObserveOnMessage = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\n//# sourceMappingURL=observeOn.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/observeOn.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/observeOn.js\n// module chunks = main","/** PURE_IMPORTS_START ._scan,._takeLast,._defaultIfEmpty,.._util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/reduce.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/reduce.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/refCount.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/refCount.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/scan.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/scan.js\n// module chunks = main","/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n;\n//# sourceMappingURL=share.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/share.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/share.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber,.._util_ArgumentOutOfRangeError,.._observable_EmptyObservable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return new EmptyObservable();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/takeLast.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/operators/takeLast.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexport var iterator = /*@__PURE__*/ symbolIteratorPonyfill(root);\n/**\n * @deprecated use iterator instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/iterator.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/iterator.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexport var observable = /*@__PURE__*/ getSymbolObservable(root);\n/**\n * @deprecated use observable instead\n */\nexport var $$observable = observable;\n//# sourceMappingURL=observable.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/observable.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/observable.js\n// module chunks = main","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nvar Symbol = root.Symbol;\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    /*@__PURE__*/ Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/rxSubscriber.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/symbol/rxSubscriber.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport var ArgumentOutOfRangeError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/ArgumentOutOfRangeError.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport var EmptyError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        var err = _super.call(this, 'no elements in sequence');\n        this.name = err.name = 'EmptyError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return EmptyError;\n}(Error));\n//# sourceMappingURL=EmptyError.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/EmptyError.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/EmptyError.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport var ObjectUnsubscribedError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\n//# sourceMappingURL=ObjectUnsubscribedError.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport var UnsubscriptionError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\n//# sourceMappingURL=UnsubscriptionError.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/UnsubscriptionError.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/UnsubscriptionError.js\n// module chunks = main","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/errorObject.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/errorObject.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/identity.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/identity.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isArray.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isArray.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isArrayLike.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isArrayLike.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isFunction.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isFunction.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isObject.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isObject.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isPromise.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isPromise.js\n// module chunks = main","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isScheduler.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/isScheduler.js\n// module chunks = main","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/noop.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/noop.js\n// module chunks = main","/** PURE_IMPORTS_START ._noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/pipe.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/pipe.js\n// module chunks = main","// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/ (function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/root.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/root.js\n// module chunks = main","/** PURE_IMPORTS_START ._root,._isArrayLike,._isPromise,._isObject,.._Observable,.._symbol_iterator,.._InnerSubscriber,.._symbol_observable PURE_IMPORTS_END */\nimport { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        var iterator = result[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        var obs = result[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\n//# sourceMappingURL=subscribeToResult.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/subscribeToResult.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/subscribeToResult.js\n// module chunks = main","/** PURE_IMPORTS_START .._Subscriber,.._symbol_rxSubscriber,.._Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/toSubscriber.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/toSubscriber.js\n// module chunks = main","/** PURE_IMPORTS_START ._errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n;\n//# sourceMappingURL=tryCatch.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/adam/Documents/Books/Essential Angular 5 Update/Source Code/Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/tryCatch.js\n// module id = ../../Chapter 03/SportsStore/node_modules/rxjs/_esm5/util/tryCatch.js\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_lazy_route_resource lazy\n// module id = ./ClientApp/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"navbar bg-info mb-1\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <a class=\\\"navbar-brand text-white\\\">SPORTS STORE Admin</a>\\r\\n    </div>\\r\\n    <div class=\\\"col text-right\\\">\\r\\n      <button class=\\\"btn btn-sm btn-warning\\\"\\r\\n              (click)=\\\"authService.logout()\\\">\\r\\n        Log Out\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row no-gutters\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <button class=\\\"btn btn-block btn-outline-info\\\" routerLink=\\\"/admin\\\"\\r\\n            routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\r\\n      Overview\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-block btn-outline-info\\\" routerLink=\\\"/admin/products\\\"\\r\\n            routerLinkActive=\\\"active\\\">\\r\\n      Products\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-block btn-outline-info\\\" routerLink=\\\"/admin/orders\\\"\\r\\n            routerLinkActive=\\\"active\\\">\\r\\n      Orders\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"col p-2\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/admin/admin.component.html\n// module id = ./ClientApp/app/admin/admin.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { AuthenticationService } from \"../auth/authentication.service\";\r\n\r\n@Component({\r\n  templateUrl: \"admin.component.html\"\r\n})\r\nexport class AdminComponent {\r\n\r\n  constructor(private repo: Repository,\r\n    public authService: AuthenticationService) {\r\n    repo.filter.reset();\r\n    repo.filter.related = true;\r\n    this.repo.getProducts();\r\n    this.repo.getSuppliers();\r\n    this.repo.getOrders();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/admin/admin.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\"\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AdminComponent } from \"./admin.component\";\r\nimport { OverviewComponent } from \"./overview.component\";\r\nimport { ProductAdminComponent } from \"./productAdmin.component\";\r\nimport { OrderAdminComponent } from \"./orderAdmin.component\";\r\nimport { ProductEditorComponent } from \"./productEditor.component\";\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, RouterModule, FormsModule],\r\n  declarations: [AdminComponent, OverviewComponent,\r\n    ProductAdminComponent, OrderAdminComponent, ProductEditorComponent]\r\n})\r\nexport class AdminModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/admin/admin.module.ts","module.exports = \"<table *ngIf=\\\"orders?.length > 0; else nodata\\\" class=\\\"table table-striped\\\">\\r\\n  <tr>\\r\\n    <th>Customer</th>\\r\\n    <th>Address</th>\\r\\n    <th>Products</th>\\r\\n    <th>Total</th>\\r\\n    <th></th>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let o of orders\\\">\\r\\n    <td>{{o.name}}</td>\\r\\n    <td>{{o.address}}</td>\\r\\n    <td>{{o.products.length}}</td>\\r\\n    <td>{{o.payment.total | currency:USD:true}}</td>\\r\\n    <td *ngIf=\\\"!o.shipped; else shipped\\\">\\r\\n      <button class=\\\"btn btn-sm btn-primary\\\"\\r\\n              (click)=\\\"markShipped(o)\\\">\\r\\n        Ship\\r\\n      </button>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #shipped>\\r\\n  <td>Shipped</td>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #nodata>\\r\\n  <h3 class=\\\"text-center\\\">There are no orders</h3>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/admin/orderAdmin.component.html\n// module id = ./ClientApp/app/admin/orderAdmin.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { Order } from \"../models/order.model\";\r\n\r\n@Component({\r\n  templateUrl: \"orderAdmin.component.html\"\r\n})\r\nexport class OrderAdminComponent {\r\n\r\n  constructor(private repo: Repository) { }\r\n\r\n  get orders(): Order[] {\r\n    return this.repo.orders;\r\n  }\r\n\r\n  markShipped(order: Order) {\r\n    this.repo.shipOrder(order);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/admin/orderAdmin.component.ts","module.exports = \"<table class=\\\"table m-1\\\">\\r\\n  <tr>\\r\\n    <td>There are {{products?.length || 0}} products for sale</td>\\r\\n    <td>\\r\\n      <button class=\\\"btn btn-sm btn-info btn-block\\\"\\r\\n              routerLink=\\\"/admin/products\\\">\\r\\n        Manage Products\\r\\n      </button>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr>\\r\\n    <td>There are {{orders?.length || 0}} orders</td>\\r\\n    <td>\\r\\n      <button class=\\\"btn btn-sm btn-info btn-block\\\"\\r\\n              routerLink=\\\"/admin/orders\\\">\\r\\n        Manage Orders\\r\\n      </button>\\r\\n    </td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/admin/overview.component.html\n// module id = ./ClientApp/app/admin/overview.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { Product } from \"../models/product.model\";\r\nimport { Order } from \"../models/order.model\";\r\n\r\n@Component({\r\n    templateUrl: \"overview.component.html\"\r\n})\r\nexport class OverviewComponent {\r\n\r\n    constructor(private repo: Repository) { }\r\n\r\n    get products(): Product[] {\r\n        return this.repo.products;\r\n    }\r\n\r\n    get orders(): Order[] {\r\n        return this.repo.orders;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/admin/overview.component.ts","module.exports = \"<table *ngIf=\\\"tableMode; else create\\\" class=\\\"table table-sm table-striped\\\">\\r\\n  <tr>\\r\\n    <th>ID</th>\\r\\n    <th>Name</th>\\r\\n    <th>Category</th>\\r\\n    <th>Supplier</th>\\r\\n    <th>Price</th>\\r\\n    <th></th>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let p of products\\\">\\r\\n    <ng-template [ngIf]=\\\"product?.productId != p.productId\\\" [ngIfElse]=\\\"edit\\\">\\r\\n      <td>{{p.productId}}</td>\\r\\n      <td>{{p.name}}</td>\\r\\n      <td>{{p.category}}</td>\\r\\n      <td>{{p.supplier?.name || '(None)'}}</td>\\r\\n      <td>{{p.price | currency:USD:true}}</td>\\r\\n      <td>\\r\\n        <button class=\\\"btn btn-sm btn-primary\\\"\\r\\n                (click)=\\\"selectProduct(p.productId)\\\">\\r\\n          Edit\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-sm btn-danger\\\"\\r\\n                (click)=\\\"deleteProduct(p.productId)\\\">\\r\\n          Delete\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-template>\\r\\n  </tr>\\r\\n  <tfoot>\\r\\n    <tr>\\r\\n      <td colspan=\\\"6\\\" class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"clearProduct(); tableMode = false\\\">\\r\\n          Create\\r\\n        </button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tfoot>\\r\\n</table>\\r\\n\\r\\n<ng-template #edit>\\r\\n  <td colspan=\\\"6\\\">\\r\\n    <admin-product-editor></admin-product-editor>\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"saveProduct()\\\">\\r\\n        Save\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-sm btn-info\\\" (click)=\\\"clearProduct()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </div>\\r\\n  </td>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #create>\\r\\n  <admin-product-editor></admin-product-editor>\\r\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"saveProduct()\\\">\\r\\n    Save\\r\\n  </button>\\r\\n  <button class=\\\"btn btn-info\\\" (click)=\\\"clearProduct()\\\">\\r\\n    Cancel\\r\\n  </button>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/admin/productAdmin.component.html\n// module id = ./ClientApp/app/admin/productAdmin.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { Product } from \"../models/product.model\";\r\nimport { Supplier } from \"../models/supplier.model\";\r\n\r\n@Component({\r\n  templateUrl: \"productAdmin.component.html\"\r\n})\r\nexport class ProductAdminComponent {\r\n\r\n  constructor(private repo: Repository) { }\r\n\r\n  tableMode: boolean = true;\r\n\r\n  get product(): Product {\r\n    return this.repo.product;\r\n  }\r\n\r\n  selectProduct(id: number) {\r\n    this.repo.getProduct(id);\r\n  }\r\n\r\n  saveProduct() {\r\n    if (this.repo.product.productId == null) {\r\n      this.repo.createProduct(this.repo.product);\r\n    } else {\r\n      this.repo.replaceProduct(this.repo.product);\r\n    }\r\n    this.clearProduct()\r\n    this.tableMode = true;\r\n  }\r\n\r\n  deleteProduct(id: number) {\r\n    this.repo.deleteProduct(id);\r\n  }\r\n\r\n  clearProduct() {\r\n    this.repo.product = new Product();\r\n    this.tableMode = true;\r\n  }\r\n\r\n  get products(): Product[] {\r\n    return this.repo.products;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/admin/productAdmin.component.ts","module.exports = \"<div class=\\\"form-group\\\">\\r\\n  <label>Name</label>\\r\\n  <input class=\\\"form-control\\\" [(ngModel)]=\\\"product.name\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Category</label>\\r\\n  <input class=\\\"form-control\\\" [(ngModel)]=\\\"product.category\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Supplier</label>\\r\\n  <select class=\\\"form-control\\\" [(ngModel)]=\\\"product.supplier\\\"\\r\\n          [compareWith]=\\\"compareSuppliers\\\">\\r\\n    <option *ngFor=\\\"let s of suppliers\\\" [ngValue]=\\\"s\\\">{{s.name}}</option>\\r\\n  </select>\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Description</label>\\r\\n  <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"product.description\\\"></textarea>\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n  <label>Price</label>\\r\\n  <input class=\\\"form-control\\\" [(ngModel)]=\\\"product.price\\\" />\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/admin/productEditor.component.html\n// module id = ./ClientApp/app/admin/productEditor.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { Product } from \"../models/product.model\";\r\nimport { Supplier } from \"../models/supplier.model\";\r\n\r\n@Component({\r\n    selector: \"admin-product-editor\",\r\n    templateUrl: \"productEditor.component.html\"\r\n})\r\nexport class ProductEditorComponent {\r\n\r\n    constructor(private repo: Repository) { }\r\n\r\n    get product(): Product {\r\n        return this.repo.product;\r\n    }\r\n    \r\n    get suppliers(): Supplier[] {\r\n        return this.repo.suppliers;\r\n    }\r\n\r\n    compareSuppliers(s1: Supplier, s2: Supplier) {\r\n        return s1 && s2 && s1.name == s2.name;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/admin/productEditor.component.ts","module.exports = \"<div class=\\\"bg-danger text-white text-center p-2 m-2\\\" *ngIf=\\\"error != null\\\">\\r\\n  <h6 *ngFor=\\\"let e of error\\\">{{e}}</h6>\\r\\n  <button class=\\\"btn btn-warning\\\" (click)=\\\"clearError()\\\">OK</button>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component, NgZone } from '@angular/core';\r\nimport { ErrorHandlerService } from \"./errorHandler.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\"\r\n})\r\nexport class AppComponent {\r\n  private lastError: string[];\r\n\r\n  constructor(errorHandler: ErrorHandlerService, ngZone: NgZone) {\r\n    errorHandler.errors.subscribe(error => {\r\n      ngZone.run(() => this.lastError = error);\r\n    });\r\n  }\r\n\r\n  get error(): string[] {\r\n    return this.lastError;\r\n  }\r\n\r\n  clearError() {\r\n    this.lastError = null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { ModelModule } from \"./models/model.module\";\r\nimport { RoutingConfig } from \"./app.routing\";\r\nimport { StoreModule } from \"./store/store.module\";\r\nimport { ProductSelectionComponent } from \"./store/productSelection.component\";\r\nimport { AdminModule } from \"./admin/admin.module\";\r\nimport { ErrorHandler } from \"@angular/core\";\r\nimport { ErrorHandlerService } from \"./errorHandler.service\";\r\nimport { AuthModule } from \"./auth/auth.module\";\r\n\r\nconst eHandler = new ErrorHandlerService();\r\n\r\nexport function handler() {\r\n  return eHandler;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, FormsModule, HttpModule, ModelModule,\r\n    RoutingConfig, StoreModule, AdminModule, AuthModule],\r\n  providers: [\r\n    { provide: ErrorHandlerService, useFactory: handler },\r\n    { provide: ErrorHandler, useFactory: handler }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { ProductSelectionComponent } from \"./store/productSelection.component\";\r\nimport { CartDetailComponent } from \"./store/cartDetail.component\";\r\nimport { CheckoutDetailsComponent }\r\n  from \"./store/checkout/checkoutDetails.component\";\r\nimport { CheckoutPaymentComponent }\r\n  from \"./store/checkout/checkoutPayment.component\";\r\nimport { CheckoutSummaryComponent }\r\n  from \"./store/checkout/checkoutSummary.component\";\r\nimport { OrderConfirmationComponent }\r\n  from \"./store/checkout/orderConfirmation.component\";\r\nimport { AdminComponent } from \"./admin/admin.component\";\r\nimport { OverviewComponent } from \"./admin/overview.component\";\r\nimport { ProductAdminComponent } from \"./admin/productAdmin.component\";\r\nimport { OrderAdminComponent } from \"./admin/orderAdmin.component\";\r\n\r\nimport { AuthenticationGuard } from \"./auth/authentication.guard\";\r\nimport { AuthenticationComponent } from \"./auth/authentication.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: AuthenticationComponent },\r\n  { path: \"admin\", redirectTo: \"/admin/overview\", pathMatch: \"full\" },\r\n  {\r\n    path: \"admin\", component: AdminComponent,\r\n    canActivateChild: [AuthenticationGuard],\r\n    children: [\r\n      { path: \"products\", component: ProductAdminComponent, },\r\n      { path: \"orders\", component: OrderAdminComponent },\r\n      { path: \"overview\", component: OverviewComponent },\r\n      { path: \"\", component: OverviewComponent }\r\n    ]\r\n  },\r\n  { path: \"checkout/step1\", component: CheckoutDetailsComponent },\r\n  { path: \"checkout/step2\", component: CheckoutPaymentComponent },\r\n  { path: \"checkout/step3\", component: CheckoutSummaryComponent },\r\n  { path: \"checkout/confirmation\", component: OrderConfirmationComponent },\r\n  { path: \"checkout\", component: CheckoutDetailsComponent },\r\n  { path: \"cart\", component: CartDetailComponent },\r\n  { path: \"store\", component: ProductSelectionComponent },\r\n  { path: \"\", component: ProductSelectionComponent }]\r\n\r\nexport const RoutingConfig = RouterModule.forRoot(routes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.routing.ts","import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\nimport { AuthenticationComponent } from \"./authentication.component\";\r\nimport { AuthenticationGuard } from \"./authentication.guard\";\r\n\r\n@NgModule({\r\n  imports: [RouterModule, FormsModule, BrowserModule],\r\n  declarations: [AuthenticationComponent],\r\n  providers: [AuthenticationService, AuthenticationGuard],\r\n  exports: [AuthenticationComponent]\r\n})\r\nexport class AuthModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/auth/auth.module.ts","module.exports = \"<div class=\\\"navbar bg-info mb-1\\\">\\r\\n  <a class=\\\"navbar-brand text-white\\\">SPORTS STORE Admin</a>\\r\\n</div>\\r\\n\\r\\n<h4 *ngIf=\\\"showError\\\" class=\\\"p-2 bg-danger text-white\\\">\\r\\n  Invalid username or password\\r\\n</h4>\\r\\n\\r\\n<form novalidate #authForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name:</label>\\r\\n    <input #name=\\\"ngModel\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"authService.name\\\" required />\\r\\n    <div *ngIf=\\\"name.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your user name\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Password:</label>\\r\\n    <input type=\\\"password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\"\\r\\n           class=\\\"form-control\\\" [(ngModel)]=\\\"authService.password\\\" required />\\r\\n    <div *ngIf=\\\"password.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your password\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-center pt-2\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"authForm.invalid\\\"\\r\\n            (click)=\\\"login()\\\">\\r\\n      Login\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/auth/authentication.component.html\n// module id = ./ClientApp/app/auth/authentication.component.html\n// module chunks = main","import {Component } from \"@angular/core\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Component({\r\n    templateUrl: \"authentication.component.html\"\r\n})\r\nexport class AuthenticationComponent {\r\n\r\n    constructor(public authService: AuthenticationService) {}\r\n\r\n    showError: boolean = false;\r\n\r\n    login() {\r\n        this.showError = false;\r\n        this.authService.login().subscribe(result => {\r\n            this.showError = !result;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/auth/authentication.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard {\r\n\r\n    constructor(private router: Router, \r\n                private authService: AuthenticationService) {}\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, \r\n            state: RouterStateSnapshot): boolean {\r\n        if (this.authService.authenticated) {\r\n            return true;\r\n        } else {\r\n            this.authService.callbackUrl = \"/admin/\" + route.url.toString();\r\n            this.router.navigateByUrl(\"/login\");\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/auth/authentication.guard.ts","import { Injectable } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Router } from \"@angular/router\";\r\nimport \"rxjs/add/observable/of\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n    constructor(private repo: Repository, \r\n                private router: Router) { }\r\n\r\n    authenticated: boolean = false;\r\n    name: string;\r\n    password: string;\r\n    callbackUrl: string;\r\n\r\n    login() : Observable<boolean> {\r\n        this.authenticated = false;\r\n        return this.repo.login(this.name, this.password)\r\n            .map(response => {\r\n                if (response.ok) {\r\n                    this.authenticated = true;\r\n                    this.password = null;\r\n                    this.router.navigateByUrl(this.callbackUrl || \"/admin/overview\");\r\n                }\r\n                return this.authenticated;\r\n            })\r\n            .catch(e => {\r\n                this.authenticated = false;\r\n                return Observable.of(false);  \r\n            });\r\n        \r\n    }\r\n\r\n    logout() {\r\n        this.authenticated = false;\r\n        this.repo.logout();\r\n        this.router.navigateByUrl(\"/login\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/auth/authentication.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class ErrorHandlerService  {\r\n    private subject = new Subject<string[]>();\r\n\r\n    handleError(error: any) {\r\n        setTimeout(() => {\r\n            if (error instanceof ValidationError) {\r\n                this.subject.next(error.errors);\r\n            } else if (error instanceof Error) {\r\n                this.subject.next([error.message]);\r\n            } else {\r\n                this.subject.next([\"An error has occurred\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    get errors(): Observable<string[]> {\r\n        return this.subject;\r\n    }\r\n}\r\n\r\nexport class ValidationError implements Error {\r\n\r\n    constructor(public errors: string[]) {}\r\n\r\n    name: string;\r\n    message: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/errorHandler.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"./product.model\";\r\nimport { Repository } from \"./repository\";\r\n\r\n@Injectable()\r\nexport class Cart {\r\n  selections: ProductSelection[] = [];\r\n  itemCount: number = 0;\r\n  totalPrice: number = 0;\r\n\r\n  constructor(private repo: Repository) {\r\n    repo.getSessionData(\"cart\").subscribe(cartData => {\r\n      if (cartData != null) {\r\n        cartData.map(item => new ProductSelection(this, item.productId,\r\n          item.name, item.price, item.quantity))\r\n          .forEach(item => this.selections.push(item));\r\n        this.update(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  addProduct(product: Product) {\r\n    let selection = this.selections\r\n      .find(ps => ps.productId == product.productId);\r\n    if (selection) {\r\n      selection.quantity++;\r\n    } else {\r\n      this.selections.push(new ProductSelection(this,\r\n        product.productId, product.name,\r\n        product.price, 1));\r\n    }\r\n    this.update();\r\n  }\r\n\r\n  updateQuantity(productId: number, quantity: number) {\r\n    if (quantity > 0) {\r\n      let selection = this.selections.find(ps => ps.productId == productId);\r\n      if (selection) {\r\n        selection.quantity = quantity;\r\n      }\r\n    } else {\r\n      let index = this.selections.findIndex(ps => ps.productId == productId);\r\n      if (index != -1) {\r\n        this.selections.splice(index, 1);\r\n      }\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.selections = [];\r\n    this.update();\r\n  }\r\n\r\n  update(storeData: boolean = true) {\r\n    this.itemCount = this.selections.map(ps => ps.quantity)\r\n      .reduce((prev, curr) => prev + curr, 0);\r\n    this.totalPrice = this.selections.map(ps => ps.price * ps.quantity)\r\n      .reduce((prev, curr) => prev + curr, 0);\r\n    if (storeData) {\r\n      this.repo.storeSessionData(\"cart\", this.selections.map(s => {\r\n        return {\r\n          productId: s.productId, name: s.name,\r\n          price: s.price, quantity: s.quantity\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport class ProductSelection {\r\n\r\n  constructor(public cart: Cart,\r\n    public productId?: number,\r\n    public name?: string,\r\n    public price?: number,\r\n    private quantityValue?: number) { }\r\n\r\n  get quantity() {\r\n    return this.quantityValue;\r\n  }\r\n\r\n  set quantity(newQuantity: number) {\r\n    this.quantityValue = newQuantity;\r\n    this.cart.update();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/cart.model.ts","\r\nexport class Filter {\r\n  category?: string;\r\n  search?: string;\r\n  related: boolean = false;\r\n\r\n  reset() {\r\n    this.category = this.search = null;\r\n    this.related = false;\r\n  }\r\n}\r\n\r\n\r\nexport class Pagination {\r\n\r\n  productsPerPage: number = 4;\r\n  currentPage = 1;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/configClasses.repository.ts","import { NgModule } from \"@angular/core\";\r\nimport { Repository } from \"./repository\";\r\nimport { Cart } from \"./cart.model\";\r\nimport { Order } from \"./order.model\";\r\n\r\n@NgModule({\r\n  providers: [Repository, Cart, Order]\r\n})\r\nexport class ModelModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/model.module.ts","import { Injectable } from \"@angular/core\";\r\nimport { Cart } from \"./cart.model\";\r\nimport { Repository } from \"./repository\";\r\nimport { Router, NavigationStart } from \"@angular/router\";\r\nimport \"rxjs/add/operator/filter\";\t\r\n\r\n@Injectable()\r\nexport class Order {\r\n\r\n  constructor(private repo: Repository,\r\n    public cart: Cart,\r\n    router: Router) {\r\n\r\n    router.events\r\n      .filter(event => event instanceof NavigationStart)\r\n      .subscribe(event => {\r\n        if (router.url.startsWith(\"/checkout\")\r\n          && this.name != null && this.address != null) {\r\n          repo.storeSessionData(\"checkout\", {\r\n            name: this.name,\r\n            address: this.address,\r\n            cardNumber: this.payment.cardNumber,\r\n            cardExpiry: this.payment.cardExpiry,\r\n            cardSecurityCode: this.payment.cardSecurityCode\r\n          });\r\n        }\r\n      });\r\n\r\n    repo.getSessionData(\"checkout\").subscribe(data => {\r\n      if (data != null) {\r\n        this.name = data.name;\r\n        this.address = data.address;\r\n        this.payment.cardNumber = data.cardNumber;\r\n        this.payment.cardExpiry = data.cardExpiry;\r\n        this.payment.cardSecurityCode = data.cardSecurityCode;\r\n      }\r\n    })\r\n  }\r\n\r\n  orderId: number;\r\n  name: string;\r\n  address: string;\r\n  payment: Payment = new Payment();\r\n\r\n  submitted: boolean = false;\r\n  shipped: boolean = false;\r\n  orderConfirmation: OrderConfirmation;\r\n\r\n  get products(): CartLine[] {\r\n    return this.cart.selections\r\n      .map(p => new CartLine(p.productId, p.quantity));\r\n  }\r\n\r\n  clear() {\r\n    this.name = null;\r\n    this.address = null;\r\n    this.payment = new Payment();\r\n    this.cart.clear();\r\n    this.submitted = false;\r\n  }\r\n\r\n  submit() {\r\n    this.submitted = true;\r\n    this.repo.createOrder(this);\r\n  }\r\n}\r\n\r\nexport class Payment {\r\n  cardNumber: string;\r\n  cardExpiry: string;\r\n  cardSecurityCode: string;\r\n}\r\n\r\nexport class CartLine {\r\n\r\n  constructor(private productId: number,\r\n    private quantity: number) { }\r\n}\r\n\r\nexport class OrderConfirmation {\r\n\r\n  constructor(public orderId: number,\r\n    public authCode: string,\r\n    public amount: number) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/order.model.ts","import { Supplier } from \"./supplier.model\";\r\nimport { Rating } from \"./rating.model\";\r\n\r\nexport class Product {\r\n  constructor(\r\n    public productId?: number,\r\n    public name?: string,\r\n    public category?: string,\r\n    public description?: string,\r\n    public price?: number,\r\n    public supplier?: Supplier,\r\n    public ratings?: Rating[]) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/product.model.ts","import { Product } from \"./product.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, RequestMethod, Request, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { Filter, Pagination } from \"./configClasses.repository\";\r\nimport { Supplier } from \"./supplier.model\";\r\nimport { Order } from \"./order.model\";\r\nimport { ErrorHandlerService, ValidationError } from \"../errorHandler.service\";\r\nimport \"rxjs/add/operator/catch\";\r\n\r\nconst productsUrl = \"/api/products\";\r\nconst suppliersUrl = \"/api/suppliers\";\r\nconst ordersUrl = \"/api/orders\";\r\n\r\n@Injectable()\r\nexport class Repository {\r\n  private filterObject = new Filter();\r\n  private paginationObject = new Pagination();\r\n\r\n  constructor(private http: Http) {\r\n    //this.filter.category = \"soccer\";\r\n    this.filter.related = true;\r\n    this.getProducts();\r\n  }\r\n\r\n  getProduct(id: number) {\r\n    this.sendRequest(RequestMethod.Get, productsUrl + \"/\" + id)\r\n      .subscribe(response => this.product = response);\r\n  }\r\n\r\n  getProducts() {\r\n    let url = productsUrl + \"?related=\" + this.filter.related;\r\n\r\n    if (this.filter.category) {\r\n      url += \"&category=\" + this.filter.category;\r\n    }\r\n    if (this.filter.search) {\r\n      url += \"&search=\" + this.filter.search;\r\n    }\r\n\r\n    url += \"&metadata=true\";\r\n    this.sendRequest(RequestMethod.Get, url)\r\n      .subscribe(response => {\r\n        this.products = response.data;\r\n        this.categories = response.categories;\r\n        this.pagination.currentPage = 1;\r\n      });\r\n  }\r\n\r\n  getSuppliers() {\r\n    this.sendRequest(RequestMethod.Get, suppliersUrl)\r\n      .subscribe(response => this.suppliers = response);\r\n  }\r\n\r\n  createProduct(prod: Product) {\r\n    let data = {\r\n      name: prod.name, category: prod.category,\r\n      description: prod.description, price: prod.price,\r\n      supplier: prod.supplier ? prod.supplier.supplierId : 0\r\n    };\r\n\r\n    this.sendRequest(RequestMethod.Post, productsUrl, data)\r\n      .subscribe(response => {\r\n        prod.productId = response;\r\n        this.products.push(prod);\r\n      });\r\n  }\r\n\r\n  createProductAndSupplier(prod: Product, supp: Supplier) {\r\n    let data = {\r\n      name: supp.name, city: supp.city, state: supp.state\r\n    };\r\n\r\n    this.sendRequest(RequestMethod.Post, suppliersUrl, data)\r\n      .subscribe(response => {\r\n        supp.supplierId = response;\r\n        prod.supplier = supp;\r\n        this.suppliers.push(supp);\r\n        if (prod != null) {\r\n          this.createProduct(prod);\r\n        }\r\n      });\r\n  }\r\n\r\n  replaceProduct(prod: Product) {\r\n    let data = {\r\n      name: prod.name, category: prod.category,\r\n      description: prod.description, price: prod.price,\r\n      supplier: prod.supplier ? prod.supplier.supplierId : 0\r\n    };\r\n    this.sendRequest(RequestMethod.Put, productsUrl + \"/\" + prod.productId, data)\r\n      .subscribe(response => this.getProducts());\r\n  }\r\n\r\n  replaceSupplier(supp: Supplier) {\r\n    let data = {\r\n      name: supp.name, city: supp.city, state: supp.state\r\n    };\r\n    this.sendRequest(RequestMethod.Put,\r\n      suppliersUrl + \"/\" + supp.supplierId, data)\r\n      .subscribe(response => this.getProducts());\r\n  }\r\n\r\n  updateProduct(id: number, changes: Map<string, any>) {\r\n    let patch = [];\r\n    changes.forEach((value, key) =>\r\n      patch.push({ op: \"replace\", path: key, value: value }));\r\n\r\n    this.sendRequest(RequestMethod.Patch, productsUrl + \"/\" + id, patch)\r\n      .subscribe(response => this.getProducts());\r\n  }\r\n\r\n  private sendRequest(verb: RequestMethod, url: string, data?: any)\r\n    : Observable<any> {\r\n\r\n    return this.http.request(new Request({\r\n      method: verb, url: url, body: data\r\n    }))\r\n      .map(response => {\r\n        return response.headers.get(\"Content-Length\") != \"0\"\r\n          ? response.json() : null;\r\n      })\r\n      .catch((errorResponse: Response) => {\r\n        if (errorResponse.status == 400) {\r\n          let jsonData: string;\r\n          try {\r\n            jsonData = errorResponse.json();\r\n          } catch (e) {\r\n            throw new Error(\"Network Error\");\r\n          }\r\n          let messages = Object.getOwnPropertyNames(jsonData)\r\n            .map(p => jsonData[p]);\r\n          throw new ValidationError(messages);\r\n        }\r\n        throw new Error(\"Network Error\");\r\n      });\r\n  }\r\n\r\n  getOrders() {\r\n    this.sendRequest(RequestMethod.Get, ordersUrl)\r\n      .subscribe(data => this.orders = data);\r\n  }\r\n\r\n  createOrder(order: Order) {\r\n    this.sendRequest(RequestMethod.Post, ordersUrl, {\r\n      name: order.name,\r\n      address: order.address,\r\n      payment: order.payment,\r\n      products: order.products\r\n    }).subscribe(data => {\r\n      order.orderConfirmation = data\r\n      order.cart.clear();\r\n      order.clear();\r\n    });\r\n  }\r\n\r\n  shipOrder(order: Order) {\r\n    this.sendRequest(RequestMethod.Post, ordersUrl + \"/\" + order.orderId)\r\n      .subscribe(r => this.getOrders())\r\n  }\r\n\r\n  product: Product;\r\n  products: Product[];\r\n  suppliers: Supplier[] = [];\r\n  categories: string[] = [];\r\n  orders: Order[] = [];\r\n\r\n  get filter(): Filter {\r\n    return this.filterObject;\r\n  }\r\n\r\n  get pagination(): Pagination {\r\n    return this.paginationObject;\r\n  }\r\n\r\n  deleteProduct(id: number) {\r\n    this.sendRequest(RequestMethod.Delete, productsUrl + \"/\" + id)\r\n      .subscribe(response => this.getProducts());\r\n  }\r\n\r\n  deleteSupplier(id: number) {\r\n    this.sendRequest(RequestMethod.Delete, suppliersUrl + \"/\" + id)\r\n      .subscribe(response => {\r\n        this.getProducts();\r\n        this.getSuppliers();\r\n      });\r\n  }\r\n\r\n  storeSessionData(dataType: string, data: any) {\r\n    return this.sendRequest(RequestMethod.Post, \"/api/session/\" + dataType, data)\r\n      .subscribe(response => { });\r\n  }\r\n\r\n  getSessionData(dataType: string): Observable<any> {\r\n    return this.sendRequest(RequestMethod.Get, \"/api/session/\" + dataType);\r\n  }\r\n\r\n  login(name: string, password: string): Observable<Response> {\r\n    return this.http.post(\"/api/account/login\",\r\n      { name: name, password: password });\r\n  }\r\n  logout() {\r\n    this.http.post(\"/api/account/logout\", null).subscribe(respone => { });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/repository.ts","module.exports = \"<div class=\\\"navbar bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand text-white\\\">SPORTS STORE</a>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"m-1\\\">\\r\\n  <h2 class=\\\"text-center\\\">Your Cart</h2>\\r\\n  <table class=\\\"table table-bordered table-striped p-1\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Quantity</th>\\r\\n        <th>Product</th>\\r\\n        <th class=\\\"text-right\\\">Price</th>\\r\\n        <th class=\\\"text-right\\\">Subtotal</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngIf=\\\"cart.selections.length == 0\\\">\\r\\n        <td colspan=\\\"4\\\" class=\\\"text-xs-center\\\">\\r\\n          Your cart is empty\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let sel of cart.selections\\\">\\r\\n        <td>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control-sm\\\"\\r\\n                 style=\\\"width:5em\\\" [(ngModel)]=\\\"sel.quantity\\\" />\\r\\n        </td>\\r\\n        <td>{{sel.name}}</td>\\r\\n        <td class=\\\"text-right\\\">\\r\\n          {{sel.price | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}\\r\\n        </td>\\r\\n        <td class=\\\"text-right\\\">\\r\\n          {{(sel.quantity * sel.price) | currency:\\\"USD\\\":true:\\\"2.2-2\\\" }}\\r\\n        </td>\\r\\n        <td class=\\\"text-center\\\">\\r\\n          <button class=\\\"btn btn-sm btn-danger\\\"\\r\\n                  (click)=\\\"cart.updateQuantity(sel.productId, 0)\\\">\\r\\n            Remove\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n      <tr>\\r\\n        <td colspan=\\\"3\\\" class=\\\"text-right\\\">Total:</td>\\r\\n        <td class=\\\"text-right\\\">\\r\\n          {{cart.totalPrice | currency:\\\"USD\\\":true:\\\"2.2-2\\\"}}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tfoot>\\r\\n  </table>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n  <button class=\\\"btn btn-primary\\\" routerLink=\\\"/store\\\">Continue Shopping</button>\\r\\n  <button class=\\\"btn btn-secondary\\\" routerLink=\\\"/checkout\\\"\\r\\n          [disabled]=\\\"cart.selections.length == 0\\\">\\r\\n    Checkout\\r\\n  </button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/cartDetail.component.html\n// module id = ./ClientApp/app/store/cartDetail.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Cart } from \"../models/cart.model\";\r\n\r\n@Component({\r\n  templateUrl: \"cartDetail.component.html\"\r\n})\r\nexport class CartDetailComponent {\r\n\r\n  constructor(public cart: Cart) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/cartDetail.component.ts","module.exports = \"<div class=\\\"text-right p-1\\\">\\r\\n  <small *ngIf=\\\"itemCount > 0; else empty\\\">\\r\\n    ({{ itemCount }} item(s) {{ totalPrice | currency:\\\"USD\\\":true }})\\r\\n  </small>\\r\\n  <button class=\\\"btn btn-sm ml-1\\\"\\r\\n          [disabled]=\\\"itemCount == 0\\\"\\r\\n          routerLink=\\\"/cart\\\">\\r\\n    <i class=\\\"fa fa-shopping-cart\\\"></i>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<ng-template #empty>\\r\\n  <small class=\\\"text-muted\\\">\\r\\n    (cart is empty)\\r\\n  </small>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/cartSummary.component.html\n// module id = ./ClientApp/app/store/cartSummary.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Cart } from \"../models/cart.model\";\r\n\r\n@Component({\r\n  selector: \"store-cartsummary\",\r\n  templateUrl: \"cartSummary.component.html\"\r\n})\r\nexport class CartSummaryComponent {\r\n\r\n  constructor(private cart: Cart) { }\r\n\r\n  get itemCount(): number {\r\n    return this.cart.itemCount;\r\n  }\r\n\r\n  get totalPrice(): number {\r\n    return this.cart.totalPrice;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/cartSummary.component.ts","module.exports = \"<div class=\\\"m-1\\\">\\r\\n  <button class=\\\"btn btn-outline-primary btn-block\\\"\\r\\n          (click)=\\\"setCurrentCategory(null)\\\">\\r\\n    All Categories\\r\\n  </button>\\r\\n  <button *ngFor=\\\"let category of categories\\\"\\r\\n          class=\\\"btn btn-outline-primary btn-block\\\"\\r\\n          [class.active]=\\\"currentCategory == category\\\"\\r\\n          (click)=\\\"setCurrentCategory(category)\\\">\\r\\n    {{category}}\\r\\n  </button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/categoryFilter.component.html\n// module id = ./ClientApp/app/store/categoryFilter.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\n\r\n@Component({\r\n  selector: \"store-categoryfilter\",\r\n  templateUrl: \"categoryFilter.component.html\"\r\n})\r\nexport class CategoryFilterComponent {\r\n\r\n  constructor(private repo: Repository) { }\r\n\r\n  get categories(): string[] {\r\n    return this.repo.categories;\r\n  }\r\n\r\n  get currentCategory(): string {\r\n    return this.repo.filter.category;\r\n  }\r\n\r\n  setCurrentCategory(newCategory: string) {\r\n    this.repo.filter.category = newCategory;\r\n    this.repo.getProducts();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/categoryFilter.component.ts","module.exports = \"<div class=\\\"navbar bg-inverse \\\">\\r\\n  <a class=\\\"navbar-brand text-white\\\">SPORTS STORE</a>\\r\\n</div>\\r\\n\\r\\n<h2 class=\\\"text-center mt-1\\\">Step 1: Your Details</h2>\\r\\n\\r\\n<form novalidate #detailsForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name</label>\\r\\n    <input #name=\\\"ngModel\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"order.name\\\" required />\\r\\n    <div *ngIf=\\\"name.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your name\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Address</label>\\r\\n    <input #address=\\\"ngModel\\\" name=\\\"street\\\" class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"order.address\\\" required />\\r\\n    <div *ngIf=\\\"address.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your address\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-center pt-2\\\">\\r\\n    <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/cart\\\">Back</button>\\r\\n    <button class=\\\"btn btn-danger\\\" [disabled]=\\\"detailsForm.invalid\\\"\\r\\n            routerLink=\\\"/checkout/step2\\\">\\r\\n      Next\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/checkout/checkoutDetails.component.html\n// module id = ./ClientApp/app/store/checkout/checkoutDetails.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Order } from \"../../models/order.model\";\r\n\r\n@Component({\r\n    templateUrl: \"checkoutDetails.component.html\"\r\n})\r\nexport class CheckoutDetailsComponent {\r\n\r\n    constructor(private router: Router,\r\n                public order: Order) {\r\n        if (order.products.length == 0) {\r\n            this.router.navigateByUrl(\"/cart\");\r\n        }            \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/checkout/checkoutDetails.component.ts","module.exports = \"<div class=\\\"navbar bg-inverse \\\">\\r\\n  <a class=\\\"navbar-brand text-white\\\">SPORTS STORE</a>\\r\\n</div>\\r\\n\\r\\n<h2 class=\\\"text-center mt-1\\\">Step 2: Payment</h2>\\r\\n\\r\\n<form novalidate #paymentForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Card Number</label>\\r\\n    <input #cardNumber=\\\"ngModel\\\" name=\\\"cardNumber\\\" class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"order.payment.cardNumber\\\" required />\\r\\n    <div *ngIf=\\\"cardNumber.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your card number\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Card Expiry</label>\\r\\n    <input #cardExpiry=\\\"ngModel\\\" name=\\\"cardExpiry\\\" class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"order.payment.cardExpiry\\\" required />\\r\\n    <div *ngIf=\\\"cardExpiry.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your card expiry\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Security Code</label>\\r\\n    <input #cardCode=\\\"ngModel\\\" name=\\\"cardCode\\\" class=\\\"form-control\\\"\\r\\n           [(ngModel)]=\\\"order.payment.cardSecurityCode\\\" required />\\r\\n    <div *ngIf=\\\"cardCode.invalid\\\" class=\\\"text-danger\\\">\\r\\n      Please enter your security code\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"text-center pt-2\\\">\\r\\n    <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/checkout/step1\\\">\\r\\n      Back\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-danger\\\" [disabled]=\\\"paymentForm.invalid\\\"\\r\\n            routerLink=\\\"/checkout/step3\\\">\\r\\n      Next\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/checkout/checkoutPayment.component.html\n// module id = ./ClientApp/app/store/checkout/checkoutPayment.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Order } from \"../../models/order.model\";\r\n\r\n@Component({\r\n    templateUrl: \"checkoutPayment.component.html\"\r\n})\r\nexport class CheckoutPaymentComponent {\r\n\r\n    constructor(private router: Router,\r\n                public order: Order) {\r\n        if (order.name == null || order.address == null) {\r\n            router.navigateByUrl(\"/checkout/step1\");\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/checkout/checkoutPayment.component.ts","module.exports = \"<h2 class=\\\"text-center\\\">Summary</h2>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <table class=\\\"table m-2\\\">\\r\\n    <tr><th>Name</th><td>{{order.name}}</td></tr>\\r\\n    <tr><th>Address</th><td>{{order.address}}</td></tr>\\r\\n    <tr><th>Products</th><td>{{order.cart.itemCount}}</td></tr>\\r\\n    <tr>\\r\\n      <th>Total Price</th>\\r\\n      <td>{{order.cart.totalPrice | currency:USD:true }}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n  <div class=\\\"text-center pt-2\\\">\\r\\n    <button class=\\\"btn btn-outline-primary\\\" routerLink=\\\"/checkout/step2\\\">\\r\\n      Back\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"submitOrder()\\\">\\r\\n      Place Order\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/checkout/checkoutSummary.component.html\n// module id = ./ClientApp/app/store/checkout/checkoutSummary.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Order } from \"../../models/order.model\";\r\n\r\n@Component({\r\n    templateUrl: \"checkoutSummary.component.html\"\r\n})\r\nexport class CheckoutSummaryComponent {\r\n\r\n    constructor(private router: Router,\r\n                public order: Order) {\r\n        if (order.payment.cardNumber == null\r\n            || order.payment.cardExpiry == null\r\n            || order.payment.cardSecurityCode == null) {\r\n            router.navigateByUrl(\"/checkout/step2\");\r\n        }\r\n    }\r\n\r\n    submitOrder() {\r\n        this.order.submit();\r\n        this.router.navigateByUrl(\"/checkout/confirmation\");\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/checkout/checkoutSummary.component.ts","module.exports = \"<h2 class=\\\"text-center\\\">Order Confirmation</h2>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <table *ngIf=\\\"order.orderConfirmation; else nodata\\\" class=\\\"table m-2\\\">\\r\\n    <tr><th>Order</th><td>{{order.orderConfirmation.orderId}}</td></tr>\\r\\n    <tr><th>Price</th><td>{{order.orderConfirmation.amount}}</td></tr>\\r\\n    <tr><th>Payment Code</th><td>{{order.orderConfirmation.authCode}}</td></tr>\\r\\n  </table>\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" routerLink=\\\"/\\\">Done</button>\\r\\n  </div>\\r\\n\\r\\n  <ng-template #nodata>\\r\\n    <h3 class=\\\"text-center\\\">Submitting Order...</h3>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/checkout/orderConfirmation.component.html\n// module id = ./ClientApp/app/store/checkout/orderConfirmation.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Order } from \"../../models/order.model\";\r\n\r\n@Component({\r\n    templateUrl: \"orderConfirmation.component.html\"\r\n})\r\nexport class OrderConfirmationComponent {\r\n\r\n    constructor(private router: Router,\r\n                public order: Order) {\r\n        if (!order.submitted) {\r\n            router.navigateByUrl(\"/checkout/step3\");\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/checkout/orderConfirmation.component.ts","module.exports = \"<div *ngIf=\\\"pages.length > 1\\\" class=\\\"text-right my-2\\\">\\r\\n  <button *ngFor=\\\"let page of pages\\\"\\r\\n          class=\\\"btn btn-outline-primary mx-1\\\"\\r\\n          [class.active]=\\\"current == page\\\"\\r\\n          (click)=\\\"changePage(page)\\\">\\r\\n    {{page}}\\r\\n  </button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/pagination.component.html\n// module id = ./ClientApp/app/store/pagination.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\n\r\n@Component({\r\n  selector: \"store-pagination\",\r\n  templateUrl: \"pagination.component.html\"\r\n})\r\nexport class PaginationComponent {\r\n\r\n  constructor(private repo: Repository) { }\r\n\r\n  get current(): number {\r\n    return this.repo.pagination.currentPage;\r\n  }\r\n\r\n  get pages(): number[] {\r\n    if (this.repo.products != null) {\r\n      return Array(Math.ceil(this.repo.products.length\r\n        / this.repo.pagination.productsPerPage))\r\n        .fill(0).map((x, i) => i + 1);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  changePage(newPage: number) {\r\n    this.repo.pagination.currentPage = newPage;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/pagination.component.ts","module.exports = \"<div *ngIf=\\\"products?.length > 0; else nodata\\\">\\r\\n  <div *ngFor=\\\"let product of products\\\" class=\\\"card card-outline-primary m-1\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <span class=\\\"h4\\\">\\r\\n        {{product.name}}\\r\\n        <store-ratings [product]=\\\"product\\\"></store-ratings>\\r\\n      </span>\\r\\n      <span class=\\\"float-right badge badge-pill badge-primary\\\">\\r\\n        {{product.price  | currency:\\\"USD\\\":\\\"symbol\\\" }}\\r\\n      </span>\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n      <span class=\\\"card-text p-a-1\\\">{{product.description}}</span>\\r\\n      <button class=\\\"float-right btn btn-sm btn-success\\\"\\r\\n              (click)=\\\"addToCart(product)\\\">\\r\\n        Add to Cart\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #nodata>\\r\\n  <h4 class=\\\"m-1\\\">Waiting for data...</h4>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/productList.component.html\n// module id = ./ClientApp/app/store/productList.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\nimport { Repository } from \"../models/repository\";\r\nimport { Product } from \"../models/product.model\";\r\nimport { Cart } from \"../models/cart.model\";\r\n\r\n@Component({\r\n  selector: \"store-product-list\",\r\n  templateUrl: \"productList.component.html\"\r\n})\r\nexport class ProductListComponent {\r\n\r\n  constructor(private repo: Repository, private cart: Cart) { }\r\n\r\n  get products(): Product[] {\r\n    if (this.repo.products != null && this.repo.products.length > 0) {\r\n      let pageIndex = (this.repo.pagination.currentPage - 1)\r\n        * this.repo.pagination.productsPerPage;\r\n      return this.repo.products.slice(pageIndex,\r\n        pageIndex + this.repo.pagination.productsPerPage);\r\n    }\r\n  }\r\n\r\n  addToCart(product: Product) {\r\n    this.cart.addProduct(product);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/productList.component.ts","module.exports = \"<div class=\\\"row bg-dark\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div class=\\\"navbar navbar-dark\\\">\\r\\n      <a class=\\\"navbar-brand text-white\\\">\\r\\n        SPORTS STORE\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-3 text-white mr-1 text-right\\\">\\r\\n    <store-cartsummary></store-cartsummary>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row no-gutters\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <store-categoryfilter></store-categoryfilter>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <store-product-list></store-product-list>\\r\\n    <store-pagination></store-pagination>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/productSelection.component.html\n// module id = ./ClientApp/app/store/productSelection.component.html\n// module chunks = main","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"store-products\",\r\n  templateUrl: \"productSelection.component.html\"\r\n})\r\nexport class ProductSelectionComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/productSelection.component.ts","module.exports = \"<span class=\\\"h6 ml-1\\\">\\r\\n  <i *ngFor=\\\"let s of stars\\\"\\r\\n     [class]=\\\"s ? 'fa fa-star' : 'fa fa-star-o'\\\"\\r\\n     [style.color]=\\\"s ? 'goldenrod' : 'gray'\\\">\\r\\n  </i>\\r\\n</span>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/store/ratings.component.html\n// module id = ./ClientApp/app/store/ratings.component.html\n// module chunks = main","import { Component, Input } from \"@angular/core\";\r\nimport { Product } from \"../models/product.model\";\r\n\r\n@Component({\r\n  selector: \"store-ratings\",\r\n  templateUrl: \"ratings.component.html\"\r\n})\r\nexport class RatingsComponent {\r\n\r\n  @Input()\r\n  product: Product;\r\n\r\n  get stars(): boolean[] {\r\n    if (this.product != null && this.product.ratings != null) {\r\n      let total = this.product.ratings.map(r => r.stars)\r\n        .reduce((prev, curr) => prev + curr, 0);\r\n      let count = Math.round(total / this.product.ratings.length);\r\n      return Array(5).fill(false).map((value, index) => {\r\n        return index < count;\r\n      });\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/ratings.component.ts","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CartSummaryComponent } from \"./cartSummary.component\";\r\nimport { CategoryFilterComponent } from \"./categoryFilter.component\";\r\nimport { PaginationComponent } from \"./pagination.component\";\r\nimport { ProductListComponent } from \"./productList.component\";\r\nimport { RatingsComponent } from \"./ratings.component\";\r\nimport { ProductSelectionComponent } from \"./productSelection.component\";\r\nimport { CartDetailComponent } from \"./cartDetail.component\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { CheckoutDetailsComponent } from \"./checkout/checkoutDetails.component\";\r\nimport { CheckoutPaymentComponent } from \"./checkout/checkoutPayment.component\";\r\nimport { CheckoutSummaryComponent } from \"./checkout/checkoutSummary.component\";\r\nimport { OrderConfirmationComponent } from \"./checkout/orderConfirmation.component\";\r\n\r\n@NgModule({\r\n  declarations: [CartSummaryComponent, CategoryFilterComponent,\r\n    PaginationComponent, ProductListComponent, RatingsComponent,\r\n    ProductSelectionComponent, CartDetailComponent,\r\n    CheckoutDetailsComponent, CheckoutPaymentComponent,\r\n    CheckoutSummaryComponent, OrderConfirmationComponent],\r\n  imports: [BrowserModule, RouterModule, FormsModule],\r\n  exports: [ProductSelectionComponent]\r\n})\r\nexport class StoreModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/store/store.module.ts","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { AppModule } from \"./app/app.module\";\r\n\r\nconst bootApplication = () => {\r\n    enableProdMode();\r\n    platformBrowserDynamic().bootstrapModule(AppModule);\r\n};\r\n\r\n//if (module[\"hot\"]) {\r\n//    module[\"hot\"].accept();\r\n//    module[\"hot\"].dispose(() => {\r\n//        const oldRootElem = document.querySelector(\"app-root\");\r\n//        const newRootElem = document.createElement(\"app-root\");\r\n//        oldRootElem.parentNode.insertBefore(newRootElem, oldRootElem);\r\n//        platformBrowserDynamic().destroy();\r\n//    });\r\n//}\r\n\r\nif (document.readyState === \"complete\") {\r\n    bootApplication();\r\n} else {\r\n    document.addEventListener(\"DOMContentLoaded\", bootApplication);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/boot.ts"],"sourceRoot":"webpack:///"}